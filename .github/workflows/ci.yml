---
name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  format:
    name: Format (Elixir ${{ matrix.pair.elixir }} / OTP ${{ matrix.pair.otp }})
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        include:
          - pair:
              elixir: 1.11
              otp: 23
    env:
      MIX_ENV: test
    steps:
      - uses: actions/checkout@v2
      - uses: erlef/setup-elixir@v1
        with:
          otp-version: ${{ matrix.pair.otp }}
          elixir-version: ${{ matrix.pair.elixir }}
      - name: Install dependencies
        run: mix deps.get
      - name: Check format
        run: mix format --check-formatted
  test:
    name: Test (Elixir ${{ matrix.pair.elixir }} / OTP ${{ matrix.pair.otp }})
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        include:
          - pair:
              elixir: 1.7
              otp: 22
          - pair:
              elixir: 1.11
              otp: 23
              coverage: true
          - pair:
              elixir: 1.13
              otp: 24
    env:
      MIX_ENV: test
    steps:
      - uses: actions/checkout@v2
      - uses: erlef/setup-elixir@v1
        with:
          otp-version: ${{ matrix.pair.otp }}
          elixir-version: ${{ matrix.pair.elixir }}
      - name: Set up dependency cache
        uses: actions/cache@v1
        with:
          path: deps/
          key: ${{ runner.os }}-${{ matrix.pair.otp }}-${{ matrix.pair.elixir }}-deps-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-${{ matrix.pair.otp }}-${{ matrix.pair.elixir }}-deps-
      - name: Set up build cache
        uses: actions/cache@v1
        with:
          path: _build/test/
          key: ${{ runner.os }}-${{ matrix.pair.otp }}-${{ matrix.pair.elixir }}-build-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-${{ matrix.pair.otp }}-${{ matrix.pair.elixir }}-build-
      - name: Install dependencies
        run: |
          mix deps.get
      - name: Compile
        run: |
          mix deps.compile
          mix compile --force --warnings-as-errors
      - name: Run tests
        if: ${{ !matrix.coverage }}
        run: mix test
      - name: Run tests (with coverage)
        if: ${{ matrix.coverage }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: mix coveralls.github
