%%
%% Autogenerated by Thrift Compiler (1.0.0-dev)
%%
%% DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
%%

-module(simple_types).

-include("simple_types.hrl").

-export([struct_info/1, struct_info_ext/1, enum_info/1, enum_names/0, struct_names/0, exception_names/0]).

struct_info('User') ->
  {struct, [{1, bool},
          {2, i64},
          {3, i32},
          {4, byte},
          {5, i16},
          {6, double},
          {7, string},
          {8, {list, {struct, {'simple_types', 'User'}}}},
          {9, {map, byte, string}},
          {10, {set, i32}},
          {11, {list, i32}}]}
;

struct_info('Nesting') ->
  {struct, [{1, {struct, {'simple_types', 'User'}}},
          {2, {struct, {'shared_types', 'SharedStruct'}}}]}
;

struct_info(_) -> erlang:error(function_clause).

struct_info_ext('User') ->
  {struct, [{1, undefined, bool, 'is_evil', undefined},
          {2, undefined, i64, 'user_id', undefined},
          {3, undefined, i32, 'number_of_hairs_on_head', undefined},
          {4, undefined, byte, 'amount_of_red', undefined},
          {5, undefined, i16, 'nineties_era_color', undefined},
          {6, undefined, double, 'mint_gum', undefined},
          {7, undefined, string, 'username', undefined},
          {8, undefined, {list, {struct, {'simple_types', 'User'}}}, 'friends', []},
          {9, undefined, {map, byte, string}, 'my_map', dict:new()},
          {10, undefined, {set, i32}, 'blocked_user_ids', sets:new()},
          {11, optional, {list, i32}, 'optional_integers', []}]}
;

struct_info_ext('Nesting') ->
  {struct, [{1, undefined, {struct, {'simple_types', 'User'}}, 'user', #'User'{}},
          {2, undefined, {struct, {'shared_types', 'SharedStruct'}}, 'nested', #'SharedStruct'{}}]}
;

struct_info_ext(_) -> erlang:error(function_clause).

struct_names() ->
  ['User', 'Nesting'].

enum_info(_) -> erlang:error(function_clause).

enum_names() ->
  [].

exception_names() ->
  [].

